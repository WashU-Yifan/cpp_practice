1. Yifan Wang 488500 wang.y1@wustl.edu
    Duy Huynh 520644
2.

    int arr[] = {-2, 19, 80, -47, 80, 80, -2, 19, 19};
    int *start= arr, *end = arr + sizeof(arr) / sizeof(*arr);
    std::ostream_iterator<int> os(cout, " ");
    std::copy(start, end, os);

    [wang.y1@linuxlab002 s18]$ ./studio18 
    -2 19 80 -47 80 80 -2 19 19

3.
    int main(int, char**) {
    int arr[] = {-2, 19, 80, -47, 80, 80, -2, 19, 19};
    int *start= arr, *end = arr + sizeof(arr) / sizeof(*arr);
    std::ostream_iterator<int> os(cout, " ");
    //std::copy(start, end, os);
    vector<int> v;
    std::back_insert_iterator<vector<int> > viterator(v);
    std::copy(start, end, viterator);
    std::copy(v.begin(), v.end(), os);
    return SUCCESS;
}

    [wang.y1@linuxlab002 s18]$ ./studio18 
    -2 19 80 -47 80 80 -2 19 19 

4.

int main(int, char**) {
    int arr[] = {-2, 19, 80, -47, 80, 80, -2, 19, 19};
    int *start= arr, *end = arr + sizeof(arr) / sizeof(*arr);
    std::ostream_iterator<int> os(cout, " ");
    //std::copy(start, end, os);
    vector<int> v;
    std::back_insert_iterator<vector<int> > viterator(v);
    std::copy(start, end, viterator);
    std::sort(v.begin(), v.end());
    std::copy(v.begin(), v.end(), os);
    return SUCCESS;
}

g++ -o studio18 -DUNIX   -Wall -W -g -std=c++17 -DTEMPLATE_HEADERS_INCLUDE_SOURCE Main.cpp 
[wang.y1@linuxlab002 s18]$ ./studio18 
-47 -2 -2 19 19 19 80 80 80

5.

    auto vstart = v.begin(), vend = v.begin();
    while (vend != v.end()) {
        vend = std::adjacent_find(vstart, v.end());
        vstart = vend;
        while(*vend == *vstart) {
            cout << *vend << " ";
            ++vend;
        }
        cout << endl;
        vstart = vend;
    }

    [wang.y1@linuxlab002 s18]$ ./studio18 
    -2 -2 
    19 19 19 
    80 80 80 
    -47 -2 -2 19 19 19 80 80 80

6.
    std::sort(v.begin(), v.end(), std:: greater<int>());
    std::copy(v.begin(), v.end(), os);

    [wang.y1@linuxlab002 s18]$ ./studio18 
    80 80 80 19 19 19 -2 -2 -47 

7.

  int sum = std::accumulate(v.begin(), v.end(), 0);
    float mean = (float)sum / v.size();
    int median = *(v.begin() + v.size() / 2);
    auto iter = v.begin();
    int mod = v[0], freq = 1;
    while (iter != v.end()) {
        int count = std::count(iter, v.end(), *iter);
        if (count > freq) {
            freq = count;
            mod = *iter;
        }
        iter += count;
    }
    cout << "Mean is " << mean << endl;
    cout << "Median is " << median << endl;
    cout << "Most frequent number " << mod << endl;
    std::copy(v.begin(), v.end(), os);

    [wang.y1@linuxlab002 s18]$ ./studio18 
    Mean is 27.3333
    Median is 19
    Most frequent number 80